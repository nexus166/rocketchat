FROM    nexus166/rocketchat:latest as release

FROM    debian:bullseye-slim
ENV     NODE_ENV="production"
SHELL   ["/bin/bash", "-xeo", "pipefail", "-c"]

RUN     export DEBIAN_FRONTEND=noninteractive; \
        apt-get update; \
        apt-get dist-upgrade -y; \
        apt-get install -y --no-install-recommends ca-certificates curl npm nodejs g++ build-essential imagemagick libstdc++6; \
        node --version; \
        npm cache clear --force

COPY    --from=release /app /app
RUN     cd /app/bundle/programs/server; \
        npm install; \
        for _module in fibers sharp; do rm -fr "npm/node_modules/${_module}"; npm install "${_module}"; mv -vf "node_modules/${_module}" "npm/node_modules/${_module}"; done; \
        cd npm; \
        npm rebuild bcrypt --build-from-source; \
        npm cache clear --force

FROM    debian:bullseye-slim
ENV     NODE_ENV="production"
SHELL   ["/bin/bash", "-xeo", "pipefail", "-c"]

RUN     export DEBIAN_FRONTEND=noninteractive; \
        apt-get update; \
        apt-get dist-upgrade -y; \
        apt-get install -y --no-install-recommends ca-certificates nodejs; \
        rm -fr /tmp/* /root/.cache /var/lib/apt/*; \
        useradd --no-create-home --home /tmp --system --shell "/sbin/nologin" rocketchat

COPY    --from=0 --chown=rocketchat:rocketchat /app /app
USER    rocketchat
WORKDIR /app/bundle
ENV     NODE_ENV=production \
        DEPLOY_METHOD=docker-arm64 \
        MONGO_URL=mongodb://db:27017/rocketchat?replicaSet=rs01 \
        MONGO_OPLOG_URL=mongodb://db:27017/local?replicaSet=rs01 \
        HOME=/tmp \
        PORT=3000 \
        Accounts_AvatarStorePath=/app/uploads
#- ROOT_URL='http://chat.localhost:3000/'
#- MAIL_URL='smtp://user:password@mailhost:port/'
EXPOSE  3000
VOLUME  /app/uploads
ENTRYPOINT ["/bin/bash", "-xc"]
CMD     ["sleep 10; nodejs main.js"]
